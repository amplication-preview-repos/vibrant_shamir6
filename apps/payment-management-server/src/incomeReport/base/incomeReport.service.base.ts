/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, IncomeReport as PrismaIncomeReport } from "@prisma/client";

export class IncomeReportServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.IncomeReportCountArgs, "select">
  ): Promise<number> {
    return this.prisma.incomeReport.count(args);
  }

  async incomeReports<T extends Prisma.IncomeReportFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.IncomeReportFindManyArgs>
  ): Promise<PrismaIncomeReport[]> {
    return this.prisma.incomeReport.findMany<Prisma.IncomeReportFindManyArgs>(
      args
    );
  }
  async incomeReport<T extends Prisma.IncomeReportFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.IncomeReportFindUniqueArgs>
  ): Promise<PrismaIncomeReport | null> {
    return this.prisma.incomeReport.findUnique(args);
  }
  async createIncomeReport<T extends Prisma.IncomeReportCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.IncomeReportCreateArgs>
  ): Promise<PrismaIncomeReport> {
    return this.prisma.incomeReport.create<T>(args);
  }
  async updateIncomeReport<T extends Prisma.IncomeReportUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.IncomeReportUpdateArgs>
  ): Promise<PrismaIncomeReport> {
    return this.prisma.incomeReport.update<T>(args);
  }
  async deleteIncomeReport<T extends Prisma.IncomeReportDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.IncomeReportDeleteArgs>
  ): Promise<PrismaIncomeReport> {
    return this.prisma.incomeReport.delete(args);
  }
}
